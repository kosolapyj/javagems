#summary Usage of gems.Checks functions

= Introduction =

* concise
* type safe

Before:

{{{
	public CliParserImpl(final String prefix, final String stopword) {
		if (prefix == null) {
			throw new IllegalArgumentException();
		}
		if (stopword == null) {
			throw new IllegalArgumentException();
		}
		this.prefix = prefix;
		this.stopword = stopword;
	}
}}}

After: 

{{{

	public CliParserImpl(final String prefix, final String stopword) {
		this.prefix = Checks.ensureNotNull(prefix);
		this.stopword = Checks.ensureNotNull(stopword);
	}

}}}


----

Before: 

{{{
	@Override public CliActuators parse(final String[] args, final CliOptions options) {
		if (args == null) {
			throw new IllegalArgumentException();
		}
		if (options == null) {
			throw new IllegalArgumentException();
		}
		return parseImpl(args, options);
	}
}}}

After: 

{{{
	@Override public CliActuators parse(final String[] args, final CliOptions options) {
		return parseImpl(Checks.ensureNotNull(args), Checks.ensureNotNull(options));
	}

}}}